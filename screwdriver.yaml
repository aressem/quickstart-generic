---
shared:
  image: centos:8
  annotations:
    screwdriver.cd/cpu: HIGH
    screwdriver.cd/ram: HIGH
    screwdriver.cd/timeout: 60

jobs:
  sample-apps:
    image: docker.io/vespaengine/vespa-pipeline:latest
    #requires: [~commit]
    annotations:
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
    secrets:
      - ALBUM_RECOMMENDATION_JAVA_DEPLOY_KEY
    steps:
      - clone: |
          git clone https://github.com/vespa-engine/sample-apps
          cd sample-apps
      - compile: |
          travis/compile-and-test.sh
      - deploy: |
          if [[ -z $SD_PULL_REQUEST ]]; then
            travis/deploy-album-recommendation-searcher.sh
          fi

  system-test:
    image: docker.io/vespaengine/vespa-build-centos7:latest
    #requires: [~commit]
    annotations:
      screwdriver.cd/cpu: LOW
      screwdriver.cd/ram: LOW
    steps:
      - clone: |
          git clone https://github.com/vespa-engine/system-test
          cd system-test
      - test: |
          ln -sf $(pwd) /source
          travis/run-unit-tests.sh

  test-documentation:
    image: vespaengine/vespa-pipeline
    requires: [~commit]
    annotations:
      screwdriver.cd/timeout: 300
      screwdriver.cd/cpu: 4
      screwdriver.cd/ram: 8
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: 4
      screwdriver.cd/dockerRam: 20
    secrets:
      - VESPA_TEAM_API_KEY
    steps:
      - set-x: set -x
      - try-docker: |
          yum install -y yum-utils
          yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
          yum install -y docker-ce-cli
          export DOCKER_HOST="localhost:2375"
          docker system info
          ls -la $SD_DIND_SHARE_PATH
          mount
          df -h
          pwd

      - test: |
          yum install -y git
          git clone https://github.com/vespa-engine/documentation
          cd documentation
          #docker run --rm --net=host -e DOCKER_HOST -v $SD_DIND_SHARE_PATH:$SD_DIND_SHARE_PATH -w $SD_DIND_SHARE_PATH --entrypoint bash vespaengine/vespa -lc "pwd && ls -la && mount && ls -la / "
          #docker run --rm --net=host -v $SD_DIND_SHARE_PATH:/wd -w /wd --entrypoint bash vespaengine/vespa -lc "pwd && ls -la && mount && ls -la / "


          #docker run --rm --net=host -e DOCKER_HOST -v $(pwd):/wd -w /wd --entrypoint /wd/travis/compile-and-test.sh vespaengine/vespa-pipeline

          #cat << EOF > test/_test_config.yml
          #urls:
          #    - "http://docs.vespa.ai/documentation/vespa-quick-start.html"
          #EOF

          yum install -y python36-pip
          pip3 install -qqq --upgrade pip
          pip3 install -qqq -r test/requirements.txt --user

          # Some procedures use openssl
          yum install -y openssl

          cd $SD_DIND_SHARE_PATH

          cat $SD_SOURCE_DIR/documentation/test/_test_config.yml | grep -E "(^urls|documentation/tutorials/blog-search)" > _test_config.yml

          # Run all tests
          $SD_SOURCE_DIR/documentation/test/test.py

          #git clone https://github.com/vespa-engine/sample-apps.git
          #cd sample-apps/album-recommendation-selfhosted
          #docker run --detach --name vespa --hostname vespa-container  --publish 8080:8080 --publish 19071:19071 vespaengine/vespa
          #sleep 60
          #curl -s --head http://localhost:19071/ApplicationStatus
          #tar -C src/main/application -cf - . | gzip |  curl --header Content-Type:application/x-gzip --data-binary @- localhost:19071/application/v2/tenant/default/session
          #curl -X PUT localhost:19071/application/v2/tenant/default/session/2/prepared
          #curl -X PUT localhost:19071/application/v2/tenant/default/session/2/active
          #docker exec -ti vespa /usr/bin/nproc
          #docker exec -ti vespa /usr/bin/cat /proc/cpuinfo
          #docker exec -ti vespa /usr/bin/cat /proc/meminfo
          #docker exec -ti vespa /usr/bin/ps auxwww
          #sleep 2
          #docker exec -ti vespa /usr/bin/ps auxwww
          #sleep 2
          #docker exec -ti vespa /usr/bin/ps auxwww
          #docker exec -ti vespa /usr/bin/ps auxwww
          #docker exec -ti vespa /usr/bin/yum install -y net-tools bind-utils
          #docker exec -ti vespa /usr/sbin/ifconfig
          #docker exec -ti vespa /usr/bin/netstat -natup|grep LISTEN
          #docker exec -ti vespa /usr/bin/hostname
          #docker exec -ti vespa /usr/bin/cat /etc/hostname
          #docker exec -ti vespa /usr/bin/cat /etc/hosts
          #docker exec -ti vespa /usr/bin/nslookup vespa-container || true

          #docker exec -ti vespa /opt/vespa/bin/vespa-logfmt -f -N

          #cd documentation
          #docker run --rm --net=host -e DOCKER_HOST -v $(pwd):/wd -w /wd --entrypoint bash vespaengine/vespa-pipeline -lc "ls -la /  && mount && ls -la /wd"
#      - test-copy: |
#          docker run -w /wd/documentation --rm -d --name testc --net=host -e DOCKER_HOST --init --entrypoint /usr/bin/tail vespaengine/vespa-pipeline -f /dev/null
#          docker cp $(pwd) testc:/wd
#          docker exec testc ls -la /wd
#          docker exec testc /wd/documentation/travis/compile-and-test.sh
#          docker stop testc
#          docker rm -f testc

  test-podman:
    #requires: [~pr, ~commit]
    steps:
      - set-x: set -x
      - try-podman: |
          dnf install -y podman
          sed -i 's,"overlay","vfs",' /etc/containers/storage.conf
          podman --log-level=debug ps -a
          podman run --net=host --events-backend=file --cgroup-manager=cgroupfs --rm docker.io/alpine cat /etc/alpine-release
          podman run --net=host --events-backend=file --cgroup-manager=cgroupfs --rm --entrypoint bash vespaengine/vespa /opt/vespa/bin/vespa-start-configserver
